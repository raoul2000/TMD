swagger: "2.0"
info:
  version: 1.0.0
  title: api-ts
  description: Tag My Document API
basePath: /api/v1
tags:
  - name: Examples
    description: Simple example endpoints
  - name: Tags
    description: Tags Management endpoints
  - name: Documents
    description: Documents Management endpoints


consumes:
  - application/json
produces:
  - application/json


definitions:
  ExampleBody:
    type: object
    title: example
    required:
      - name
    properties:
      name:
        type: string
        example: no_stress
  TagBody:
    type: object
    title: tag
    required:
      -name
    properties:
      name:
        type: string
        example: tagName

paths:
  /examples:
    get:
      tags:
        - Examples
      description: Fetch all examples
      responses:
        200:
          description: Returns all examples
    post:
      tags:
        - Examples
      description: Create a new example
      parameters:
        - name: example
          in: body
          description: an example
          required: true
          schema: 
            $ref: "#/definitions/ExampleBody"
      responses:
        200:
          description: Returns all examples

  /examples/{id}:
    get:
      tags:
        - Examples
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the example to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not found

  # Document ####################################################################

  /documents:
    get:
      tags:
        - Documents
      description: Fetch all documents
      responses:
        200:
          description: Returns all documents
    post:
      tags:
        - Documents
      description: Create a new document
      consumes:
        - multipart/form-data
      parameters:
        - name: name
          in: formData
          type: string
          description: name of the new document
          required: true
        - name: tags
          in: formData
          type: string
          description: comma separated list of tag ids assigned to the document
          required: true
        - name: content
          in: formData
          type: file
          description: content of the new document
          required: true
      responses:
        200:
          description: document could be created
        500:
          description: an error occured, document could not be created

  /documents/{id}:
    get:
      tags:
        - Documents
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the document to retrieve
          type: string
      responses:
        200:
          description: Return the document with the specified id
        404:
          description: Document not found
    delete:
      tags:
        - Documents
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the document to delete
          type: string
      responses:
        200:
          description: the document was deleted
        404:
          description: Document not found
          
  /documents/{id}/content:
    get:
      tags:
        - Documents
      summary: get the content of a document
      description: Each document has one main content that is returned by a call to this URL
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the document to retrieve content from
          type: string
      responses:
        200:
          description: Return the content of the document with the specified id
        404:
          description: Document not found

  /documents/{id}/tags:
    get:
      tags:
        - Documents
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the document to read tags from
          type: string
      responses:
        200:
          description: Return the list of tags assigned to this document
        404:
          description: Document not found
    put:
      tags:
        - Documents
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the document to update tags to
          type: string
        - name: tags
          in: body
          required: true
          description: array of tags names


  # Tag ####################################################################
  
  /tags:
    get:
      tags:
        - Tags
      description: Fetch all examples
      responses:
        200:
          description: Returns all examples
    post:
      tags:
        - Tags
      description: Create a new tag
      parameters:
        - name: tag
          in: body
          type: string
          description: the tag to create
          required: true
          schema: 
            $ref: "#/definitions/TagBody"

      responses:
        200:
          description: tag could be created
        500:
          description: an error occured, tag could not be created

  /tags/{id}:
    get:
      tags:
        - Tags
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the tag to retrieve
          type: integer
      responses:
        200:
          description: Return the tag with the specified id
        404:
          description: Tag not found
    delete:
      tags:
        - Tags
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the tag to delete
          type: integer
      responses:
        200:
          description: The tag has been deleted
        404:
          description: Tag not found